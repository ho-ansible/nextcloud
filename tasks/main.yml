---
# See: https://gitlab.paragon-es.de/ansible-roles/nextcloud/blob/master/tasks/install.yml

- name: nextCloud | dependencies
  tags:
    - package
  package:
    name: 
      - php-pgsql
      - php-curl
      - php-gd
      - php-apcu
      - php-xml
      - php-mbstring
      - php-intl
      - php-imagick
      - php-zip
      - ffmpeg

- name: nextCloud | install (git)
  tags:
    - package
    - git
  git:
    repo: "{{ cloud_repo }}"
    dest: '{{ cloud_www_dir }}'
    version: 'v{{ cloud_version }}'
    depth: 1
    force: yes

- name: nextCloud | apps (git)
  tags:
    - git
  git:
    repo: "{{ item.value }}"
    dest: '{{ cloud_www_dir }}/apps/{{ item.key }}'
    version: 'v{{ cloud_version }}'
    depth: 1
    force: yes
  loop: "{{ q('dict', cloud_apps) }}"

- name: nextCloud | config
  tags:
    - config
  template:
    src: config.php.j2
    owner: www-data
    mode: 0640
    dest: "{{ cloud_www_dir }}/config/config.php"

- name: nextCloud | copy config (MIME, PHP)
  tags:
    - config
  copy:
    src: "{{ item.src }}"
    dest: "{{ cloud_www_dir }}/{{ item.dest }}"
  loop:
    - { src: mimetypemapping.json, dest: config/ }
    - { src: mimetypealiases.json, dest: config/ }
    - { src: user.ini, dest: .user.ini }

- name: nextCloud | set group
  tags:
    - permissions
  file:
    path: "{{ cloud_www_dir }}"
    group: www-data
    recurse: yes

- name: nextCloud | writeable paths
  tags:
  - permissions
  file:
    path: "{{ cloud_www_dir }}/{{ item }}"
    owner: www-data
    recurse: yes
  loop:
    - apps
    - config
    - updater

- name: nextCloud | data directories
  tags:
    - dir
  file:
    path: "{{ item }}"
    state: directory
    group: www-data
    mode: 0770
  loop:
    - "{{ cloud_data_dir }}"
    - "{{ cloud_cache_dir }}"

- name: nextCloud | cron
  tags:
  - cron
  cron:
    name: 'nextCloud cron'
    cron_file: nextcloud
    minute: '4-49/15'
    user: www-data
    job: 'php {{ cloud_www_dir }}/cron.php 2>&- >&-'

- name: nextCloud | thumbnail cron
  tags:
  - cron
  cron:
    name: 'nextCloud thumbnail cron'
    cron_file: nextcloud_thumbs
    minute: '12'
    hour: '0-23/6'
    user: www-data
    job: 'php {{ cloud_www_dir }}/occ preview:pre-generate 2>&- >&-'

# offsite backup cron:
# rsync -PaCH -e "ssh -p port -l user" --rsync-path="sudo rsync" data-dir offsite:/dir

- name: nextCloud | nginx config
  vars:
    site: nextcloud
  include_role:
    name: nginx
    tasks_from: site.yml

- name: nextCloud | DB user
  tags:
  - db
  become_user: postgres
  postgresql_user:
    name: "{{ cloud_db_user }}"
    password: "{{ cloud_db_pw }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB

- name: nextCloud | DB
  tags:
  - db
  become_user: postgres
  postgresql_db:
    name: "{{ cloud_db }}"
    owner: "{{ cloud_db_user }}"

- name: nextCloud | iptables
  tags:
    - iptables
  iptables:
    ip_version: "{{ item }}"
    chain: INPUT
    protocol: tcp
    destination_port: "{{ cloud_port }}"
    jump: ACCEPT
  loop: [ ipv4, ipv6 ]
  notify: iptables

